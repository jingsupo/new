---
title: Git Rev News Edition 11 (January 13th, 2016)
layout: default
date: 2016-01-13 21:06:51 +0100
author: chriscool
categories: [news]
navbar: false
---

## Git Rev News: Edition 11 (January 13th, 2016)

Welcome to the 11th edition of [Git Rev News](https://git.github.io/rev_news/rev_news/),
a digest of all things Git. For our goals, the archives, the way we work, and how to contribute or to
subscribe, see [the Git Rev News page](https://git.github.io/rev_news/rev_news/) on [git.github.io](https://git.github.io).

This edition covers what happened during the month of December 2015.

## Discussions

<!---
### General
-->

### Reviews

* [RefTree: Alternate ref backend](http://thread.gmane.org/gmane.comp.version-control.git/282677/)

Shawn Pearce, who is one of the main Git, JGit and Gerrit
contributors, sent an email about a new ref storage backend saying:

> I started playing around with the idea of storing references directly
> in Git. Exploiting the GITLINK tree entry, we can associate a name to
> any SHA-1.

and:

> By exploiting Git to store Git, we get a reflog for free...

It's interesting because there has been a lot of work during the past
years to develop news ways to store refs. Especially there has been
[attemps to store refs in databases like LMDB](http://thread.gmane.org/gmane.comp.version-control.git/277138), that have been covered in
[Git Rev News edition 7](https://git.github.io/rev_news/2015/09/09/edition-7/).

This new approach tries to store refs using git's own object database
that already stores blobs, trees, commits and tags.

It uses so called "gitlink" which are special tree entries that are
used by [git submodules](https://git-scm.com/docs/git-submodule) to
refer to commits in their host git repository.

Following some comments by Junio, Shawn agreed that his implementation
has some hacks to handle "HEAD", which is a special ref, and to handle
the fact that gitlinks were made to only point to commits, not tags.

Michael Haggerty wondered if the negociation phase that happens when
doing a 'git fetch' could be sped up by such an implementation. This
started a discussion between Shawn, Junio and Michael about how the
"refs/" hierarchy could be improved.

Jeff King discussed with Shawn some other aspects like the reflog and
reachability, and Shawn mentioned other advantages:

> One advantage of this format is deleted branches can retain a reflog
> post deletion. Another is you can trivially copy the reflog using
> native Git to another system for backup purposes. Or fetch it over the
> network to inspect locally. So a shared group server could be
> exporting its reflog, you can fetch it and review locally what
> happened to branches without logging into the shared server.

> Another advantage of this format over LMDB or TDB or whatever is Git
> already understands it. The tools already understand it. Plumbing can
> inspect and repair things. You can reflog the reflog using traditional
> reflog...

And it looks like Shawn has a bigger plan but don't want to tell us
too much for now.

* [Split .git/config in multiple worktree setup](http://thread.gmane.org/gmane.comp.version-control.git/281906/)

Duy Nguyen sent a patch series that restarted
[previous work he had already done](http://thread.gmane.org/gmane.comp.version-control.git/266520)
on splitting config options in two different sets. Some that are
specific to each worktree and some that are not.

There are two pattern lists. One is a default pattern list built into
the git binary, and the other one in ".git/info/config.worktree" is a
user writable pattern list. Those two pattern lists are merged
internaly to specify which config options are worktree specific.

The worktree specific config options should then be put in
".git/worktrees/NAME/config.worktree" where NAME is a specific
worktree's name, while the other config options still stay in
".git/config".

Eric Sunshine reviewed the patch series and as always asked pertinent
questions on the naming of files, the code and the tests.

Max Kirillov first suggested the following:

> Now there are extensions support, would it make sense to
> mark repositories which use per-worktree config with an
> extension?

Max is refered to the extension mechanism that has been released in
the brand new Git 2.7.0 and that
[was mentioned in some places](http://lwn.net/Articles/668163/).

And Duy liked the idea of adding an extension for per-worktree config.

Max on the other hand said that having a default pattern list built
into the git binary could be confusing for users and could be
difficult to extend, but Duy and Junio didn't agree with that.

From the following discussion, it looks like it is a complex issue to
design something that is backward and forward compatible.

<!---
### Support
-->

## Releases

Apart from some minor releases, the major release last month was Git 2.7.0,
arriving in Git and Git for Windows not long after. See the articles from
Michael Haggerty and Tim Pettersen below for tours of the new features.

Other releases:

* pygit2 tagged [0.23.3](https://github.com/libgit2/pygit2/releases/tag/v0.23.3)
* nodegit is up to [0.7.0](https://github.com/nodegit/nodegit/releases/tag/v0.7.0)
* ObjectiveGit just released [0.9.0](https://github.com/libgit2/objective-git/releases/tag/0.9.0)
* GitLab has reached [8.3](https://about.gitlab.com/2015/12/22/gitlab-8-3-released/)


## Other News

__Various__

* Jeff King [announced that GitHub is organizing another Git Merge conference](http://article.gmane.org/gmane.comp.version-control.git/282634/) for the beginning of April 2016 with a Git Developer Summit, and asked for people interested in coming to the Summit to tell him.
* Jeff King, Shawn Pearce and Junio C. Hamano ganged up, urging everyone to
  [support the Software Freedom Conservancy](http://permalink.gmane.org/gmane.comp.version-control.git/282881),
  which is the non-profit organization that legally hosts the Git project.

__Light reading__

* Run a Git server in just [one line of JavaScript](https://gist.github.com/MakeNowJust/262e080217aebbc628c0)
* [Source Control for Art Assets - This Must Exist](http://hacksoflife.blogspot.de/2015/12/source-control-for-art-assets-this-must.html), by Benjamin Supnik
* From the "competition": [Why I think Bazaar is better than Git](http://lduros.net/posts/why-i-think-bazaar-better-git/), by Loic Duros
* Another one: [Fossil keeps more than just your code](https://blog.kotur.org/posts/fossil-keeps-more-than-just-your-code.html), by Nikola Kotur
* [Move Fast and Fix Things](http://githubengineering.com/move-fast/), an insight into GitHub's internal Git usage and process, by Vicent Marti
* [Choose the right Git branching strategy](http://www.creativebloq.com/web-design/choose-right-git-branching-strategy-121518344), by Lorna Mitchell
* [Python core is moving to GitHub](https://mail.python.org/pipermail/core-workflow/2016-January/000345.html), according to discussions on their mailing list
* [Neat new features in Git 2.7](https://developer.atlassian.com/blog/2016/01/git-2.7-release/), by Atlassian's Tim Pettersen
* [New Year, new Git release](https://github.com/blog/2094-new-year-new-git-release), by GitHub's Michael Haggerty
* A bit late, but here's how could have [learned Git over the holidays](http://vanwilson.info/2015/12/the-12-days-of-git-learn-git-over-the-holidays/), by Van Wilson
* The authors of the German Git book have decided to make it [freely available online](http://gitbu.ch/index.html)
* [Doing Git Flow in Node](http://blog.smith-kyle.com/git-flow-with-node/), by Kyle Smith


__Git tools and sites__

* [githost.io](https://githost.io/) is GitLab's new hosted offering
* [git-appraise](https://github.com/google/git-appraise) offers distributed code review
* [git-panda](http://wdm0006.github.io/git-pandas/) wraps around gitpython for creating pandas dataframes (data analysis in Python)
* [Git Core Trainer](https://github.com/ianmiell/shutit-git-trainer), an automated and interactive git trainer, built using Docker and ShutIt
* [quack](https://github.com/Autodesk/quack) offers to "reuse Git modules in smart way"
* [Trident](http://somerobots.com/trident.html) looks like a nice iOS Git client

## Credits

This edition of Git Rev News was curated by Christian Couder &lt;<christian.couder@gmail.com>&gt;,
Thomas Ferris Nicolaisen &lt;<tfnico@gmail.com>&gt; and Nicola Paolucci &lt;<npaolucci@atlassian.com>&gt;.
